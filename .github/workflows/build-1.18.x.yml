name: Build
on:
  push:
    branches:
      - '1.18.x/*'
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  validate-gradle:
    name: "Validate Gradle wrapper"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true # Clone with vs-core submodule
      - uses: gradle/wrapper-validation-action@v1

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Shallow Clone (--recurse-submodules)
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Gradle & Caches
        uses: "./.github/actions/setup-gradle"

      - name: Build and analyze
        run: ./gradlew build --info
        continue-on-error: true # still upload checkstyle report even if build fails

      - uses: actions/upload-artifact@v3
        with:
          name: fabric artifacts
          path: |
            fabric/build/libs/*.jar
      - uses: actions/upload-artifact@v3
        with:
          name: forge artifacts
          path: |
            forge/build/libs/*.jar
      - uses: jwgmeligmeyling/checkstyle-github-action@master # show checkstyle/ktlint report
        with:
          path: |
            */build/reports/checkstyle/*.xml
            */build/reports/ktlint/*/*.xml

  test-server:
    name: Test Server
    strategy:
      matrix:
        serverType: [ 'fabric', 'forge' ]
    runs-on: ubuntu-latest
    timeout-minutes: 20 # Fail after 20 minutes
    steps:
      - name: Shallow Clone (--recurse-submodules)
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Gradle & Caches
        uses: "./.github/actions/setup-gradle"

      - name: Test Server
        uses: ValkyrienSkies/Minecraft-Architectury-Testing@v1.9
        with:
          serverType: ${{ matrix.serverType }}

  publish:
    name: Publish to Maven
    runs-on: ubuntu-latest
    # Run only on pushes to main branches
    if: ${{ endsWith(github.ref, '/main') && github.event_name == 'push' }}
    steps:
      - name: Shallow Clone (--recurse-submodules)
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Gradle & Caches
        uses: "./.github/actions/setup-gradle"

      - name: Publish with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew build publish --stacktrace --no-daemon